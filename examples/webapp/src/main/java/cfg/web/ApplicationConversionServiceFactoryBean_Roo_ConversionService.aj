// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cfg.web;

import cfg.model.AppConfig;
import cfg.model.AppConfigRepository;
import cfg.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AppConfigRepository ApplicationConversionServiceFactoryBean.appConfigRepository;
    
    public Converter<AppConfig, String> ApplicationConversionServiceFactoryBean.getAppConfigToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cfg.model.AppConfig, java.lang.String>() {
            public String convert(AppConfig appConfig) {
                return new StringBuilder().append(appConfig.getPropertyName()).append(" ").append(appConfig.getPropertyValue()).toString();
            }
        };
    }
    
    public Converter<Long, AppConfig> ApplicationConversionServiceFactoryBean.getIdToAppConfigConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, cfg.model.AppConfig>() {
            public cfg.model.AppConfig convert(java.lang.Long id) {
                return appConfigRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, AppConfig> ApplicationConversionServiceFactoryBean.getStringToAppConfigConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cfg.model.AppConfig>() {
            public cfg.model.AppConfig convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AppConfig.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAppConfigToStringConverter());
        registry.addConverter(getIdToAppConfigConverter());
        registry.addConverter(getStringToAppConfigConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
